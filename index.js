module.exports=function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e),n.d(e,"version",(function(){return w})),n.d(e,"Resource",(function(){return D})),n.d(e,"resource",(function(){return b})),n.d(e,"getAllResourceDB",(function(){return B})),n.d(e,"getCurrentActiveDB",(function(){return C}));class o{constructor(){if(!chrome)throw new Error("chrome not found")}get storage(){return chrome.storage.sync}}class r{constructor(){if(!browser)throw new Error("chrome not found")}get storage(){return browser.storage.sync}}class s{constructor(){this._platform=null;try{this._platform=new o}catch(t){}if(!this._platform)try{this._platform=new r}catch(t){}}get storage(){return this._platform.storage}}var i,c,u,a,f=function(t,e,n){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,n),n},l=function(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)};!function(t){t.AddResource="addResource",t.GetAllResourceDB="getAllDB",t.GetCurrentDB="getCurrentDB"}(u||(u={})),function(t){t.NotifyDBChanged="notifyDBChanged",t.NotifyDownloadError="notifyDownloadError",t.NotifyDownloadSuccess="notifyDownloadSuccess",t.NotifyConnectError="notifyConnectError",t.NotifyAllResourceDB="notifyAllResourceDB",t.NotifyCurrentDB="notifyCurrentDB",t.NotifyReconnect="notifyReconnect"}(a||(a={}));class d{constructor(t,e){i.set(this,void 0),c.set(this,void 0),f(this,i,t),f(this,c,e),d._id+=1}static get id(){return d._id}static set id(t){d._id=t}toJson(){return{id:d._id,method:l(this,i),params:l(this,c)}}}i=new WeakMap,c=new WeakMap,d._id=0;var h,_=function(t,e,n){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,n),n},p=function(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)};const w="0.0.2";let y=null,g=null;class m{constructor(){this._url="ws://localhost:21313",this._events=new Map,this._platform=new s,this._reconnect(),this._initWebsocket(),this._events[a.NotifyCurrentDB]=this._onInit}get currentDB(){return this._currentDB}set onCurrentDBChange(t){this._events[a.NotifyDBChanged]=t}set onDownloadError(t){this._events[a.NotifyDownloadError]=function(e,n){t(e,n),g(!1)}}set onDownloadSuccess(t){this._events[a.NotifyDownloadSuccess]=function(e,n){y(!0),t(e,n)}}set onCennectError(t){this._events[a.NotifyConnectError]=t}set onCennectAgain(t){this._events[a.NotifyReconnect]=t}_onInit(t,e){let n=v._platform.storage;d.id=t,v._platform.storage.get(["current"],(function(t){if(0===Object.keys(t).length){const t=e.curdb;n.set({current:t},(function(){})),v._currentDB=t}else v._currentDB=t}))}_onerror(){}_onopen(t){console.info(t),m._isConnecting=!1}_onclose(){v._reconnect()}_onmessage(t){if(!t.data)return;const e=JSON.parse(t.data),n=this._events[e.method];n&&n(e.id,e.params)}_reconnect(){const t=this;setTimeout((function(){t.ws=new WebSocket(t._url,"civet-protocol"),m._isConnecting=!0,t._initWebsocket()}),2500)}_initWebsocket(){return!!this.ws&&(this.ws.onerror=this._onerror,this.ws.onopen=this._onopen,this.ws.onclose=this._onclose,this.ws.onmessage=this._onmessage.bind(this),!0)}send(t){if(!this.ws)return!1;const e=t.toJson();return this.ws.send(JSON.stringify(e)),!0}}m._isConnecting=!1;class D{constructor(t){h.set(this,void 0),_(this,h,t)}addByPath(t,e){let n=e||p(this,h).currentDB;if(!n)return new Promise((t,e)=>{console.error("cannot connect civet, please check you extension"),e("use resource db "+n)});const o=new d(u.AddResource,{db:n,url:t});return new Promise((t,e)=>{p(this,h).send(o),y=t,g=e})}addByBinary(t,e){return console.info("read",t,e),!0}onDownloadSuccess(t){p(this,h).onDownloadSuccess=t}onDownloadFail(t){p(this,h).onDownloadError=t}}h=new WeakMap;let v=new m,b=new D(v);function B(){return[]}function C(){return v.currentDB}}]);
//# sourceMappingURL=index.js.map